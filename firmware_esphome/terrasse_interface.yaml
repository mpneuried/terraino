esphomeyaml:
  name: 'terrasse_interface'
  platform: ESP32
  board: ttgo-lora32-v1

wifi:
  ssid: 'Catwoman'
  password: 'qct25ssvfj97'

# Enable logging
logger:
  baud_rate: 0

uart:
  rx_pin: RX
  baud_rate: 4800

# Enable Home Assistant API
api:
  password: 'xrdzrtfsx&Rdq07'

ota:
  password: 'xrdzrtfsx&Rdq07'

web_server:
  port: 80

time:
  - platform: homeassistant
    id: homeassistant_time

i2c:
  sda: 5
  scl: 4

esp32_touch:
  setup_mode: False

binary_sensor:
  - platform: esp32_touch
    name: "ESP32 Touch"
    pin: GPIO15
    threshold: 1000
  - platform: homeassistant
    id: showtimer
    name: "Terrassen Timer Show"
    internal: true
    entity_id: binary_sensor.show_timer_wasser_terrasse
  - platform: homeassistant
    id: showtimer_brunnen
    name: "Brunnen Timer Show"
    internal: true
    entity_id: binary_sensor.show_timer_brunnen

sensor:
  - platform: homeassistant
    id: timer_brunnen
    name: "Brunnen Timer"
    internal: true
    entity_id: sensor.timer_brunnen
  - platform: homeassistant
    id: duration_brunnen
    name: "Brunnen Timer Duration"
    internal: true
    entity_id: input_number.timer_pumpe_brunnen
  - platform: homeassistant
    id: timer
    name: "Terrassen Timer"
    internal: true
    entity_id: sensor.timer_wasser_terrasse
  - platform: homeassistant
    id: duration
    name: "Terrassen Timer Duration"
    internal: true
    entity_id: input_number.timer_terrasse
  - platform: homeassistant
    id: automation_state
    name: "Automation state"
    internal: true
    entity_id: input_number.timer_terrasse

font:
  - file: "roboto.ttf"
    id: fontSmall
    size: 9
  - file: "roboto.ttf"
    id: fontMid
    size: 13
  - file: "roboto.ttf"
    id: fontBig
    size: 19

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    reset_pin: 16
    rotation: 90
    address: 0x3C
    update_interval: 1s
    lambda: |-
      it.strftime(7, 108, id(fontBig), "%H:%M", id(homeassistant_time).now());
      static int cursor_a = 0;
      if (id(timer).state >= 0 && id(showtimer).state ) {
        it.printf(it.get_width() / 2,cursor_a, id(fontSmall), TextAlign::TOP_CENTER, "Terrasse:");
        it.printf(it.get_width() / 2 - 1,cursor_a+12, id(fontBig), TextAlign::TOP_RIGHT, "%.0f", id(timer).state);
        it.printf(it.get_width() / 2 + 1,cursor_a+19, id(fontSmall), TextAlign::TOP_LEFT, "Min.");
        it.rectangle(0, cursor_a+35, it.get_width(), 6);
        it.filled_rectangle(0, cursor_a+35, ( id(timer).state / id(duration).state * it.get_width() ), 6);
      }
      static int cursor_b = 65;
      if (id(timer_brunnen).state >= 0 && id(showtimer_brunnen).state ) {
        it.printf(it.get_width() / 2,cursor_b, id(fontSmall), TextAlign::TOP_CENTER, "Brunnen:");
        it.printf(it.get_width() / 2 - 1,cursor_b+12, id(fontMid), TextAlign::TOP_RIGHT, "%.0f", id(timer_brunnen).state);
        it.printf(it.get_width() / 2 + 1,cursor_b+12, id(fontMid), TextAlign::TOP_LEFT, "Min.");
        it.rectangle(0, cursor_b+30, it.get_width(), 4);
        it.filled_rectangle(0, cursor_b+30, ( id(timer_brunnen).state / id(duration_brunnen).state * it.get_width() ), 4);
      }
    
